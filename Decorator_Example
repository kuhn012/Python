# Create an @authenticated decorator that only allows the function to run is user1 has 'valid' set to True:
user1 = {
    'name': 'Sorna',
    'valid': False #changing this will either run or not run the message_friends function.
}

def authenticated(func):
    def wrap_func(*args, **kwargs):
        if user1['valid'] == True:
            func(*args, **kwargs)
    return wrap_func

@authenticated
def message_friends(user):
    print('message has been sent')

message_friends(user1)
##One way, but this doesn't return invalid

# Create an @authenticated decorator that only allows the function to run is user1 has 'valid' set to True:
user1 = {
    'name': 'Sorna',
    'valid': False #changing this will either run or not run the message_friends function.
}

def authenticated(func):
    def wrap_func(*args, **kwargs):
        if args[0]['valid'] == True:
            return func(*args, **kwargs)
        else:
            print("Too bad")
    return wrap_func

@authenticated
def message_friends(user):
    print('message has been sent')

message_friends(user1)
